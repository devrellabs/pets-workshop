name: Server Tests

on:
  push:
    branches: [ main]
    paths:
      - 'server/**'
      - '.github/workflows/server-test.yml'
  pull_request:
    branches: [ main]
    paths:
      - 'server/**'
      - '.github/workflows/server-test.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.12', '3.13', '3.14']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests with unittest
      run: |
        cd server
        python -m unittest test_app.py -v
    
    - name: Run tests with pytest (alternative)
      run: |
        cd server
        python -m pytest test_app.py -v --tb=short
    
    - name: Run tests with coverage
      run: |
        cd server
        python -m pytest test_app.py --cov=app --cov-report=term-missing --cov-report=xml
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage.xml
        flags: server
        name: server-coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        cd server
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        cd server
        black --check --diff .
    
    - name: Check import sorting with isort
      run: |
        cd server
        isort --check-only --diff .